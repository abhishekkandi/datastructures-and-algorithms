Maths Problems

1)  Implement prime number with O(sqrt(N)) time complexity
Hint: Max boundary of prime numbers is sqrt(N)
_________________________________________________________________________________________________

1D Array Problems
1) Given a string A of lower case characters "abcgagg", Find how many subsequence of string "ag" are present ??

2) Complete Rotating array K times problem
_________________________________________________________________________________________________

2D Array Problems

1) Rotate a 2D array by 90 degress
_________________________________________________________________________________________________

Hashing Problems

1) Given an array of n integers, k integer. Count the no of pairs whose sum is divisible by k
Hint: First take % k of all elements in array, later solve it with two sum approach (using hashing)
- Desired time complexity -> O(n)
(Basic Maths - 2)

_________________________________________________________________________________________________

Problem Solving - 4

1) Find the majority element x in Array of length N 
(Majority element -> Frequency(x) > N/2 - Only one majority can exists as N/2 is min frequency)
Can be solved using Moore's voting algorithm
-> Maintain candidate for M.E.(MajorElement), and candidate's frequency
-> Reduce candidate's frequency whenever distinct element is encountered
& Increment frequency whenever we come across similar element 
-> Atlast a candidate will be left out, Verify if it is M.E. by traversing all the elements once again
2) Given 3 primenumber. We need to regenerate first N number in series.
Every number in the series having P1,P2,P3 as the divisors
3) Find the submatrix sum query
_________________________________________________________________________________________________

Problem Solving - 5 (Discussed in class)

1) Given 2 strings A & B. Find the count of all permutations of A present in B as substring.
2) Given an Array of N integers. Minimize the difference between maximum & minimum.
3) Given a integer N. Count the number of set bits from 1 to N.
(Already solved in scaler assignment), 
Try approach taught in class too -> Dynamic programming (Recursion with memorization) & pattern

_________________________________________________________________________________________________

Problem Solving - 6 (Discussed in class)

1) Revisit first question
2) Given N bulbs with switches of state 0 or 1, If ith switch is toggled,
it will toggle state of remaining j bulbs (j >= i)
3) Given an Array A { 0, 1 } of size n & Q queries Q(L,R)
First query should return XOR of elements from L,R
Second query should return number of zeroes from L,R 
4) Given a floor of dimensions of N * M
Given square tiles of size a * a which need to cover floor with tiles
& you're allowed more area than the floor. 
But not allowed to break the tiles.
Need to return min number of tiles required to cover all the floors.
Answer -> ceil(MN/AA)
5) Given an array of size N. Value of subarray is defined as Bitwise OR of all elements in the subarray. 
Find the subarray of all elements. (Rewatch its explaination)
(Homework - Will complete in next class)
_________________________________________________________________________________________________

Problem Solving - 7 (Discussed in class)

5) Given an array of size N. Value of subarray is defined as Bitwise OR of all elements in the subarray. 
Find the sum(Bitwise of subarray) of all subarrays. (Rewatch its explaination) - Continuation of last class 

1) Given an array of N integers, Value of subarray is sum of all elements.
Find sum of all subarray. 
Need to find out how many times each element in exists in subarrays -> ith = i * (n - i + 1)
2) In Above question, subarray could be replaced as Subset 
3) Hotel booking 
Given N advanced bookings & K rooms. Need to tell if you can accomdate them. 
(Beggar problem technique need to be used)
4) Finding duplicate rows in a binary matrix.
Convert each row element into decimal(One solution)
Using TRIE -> Data structure for better time complexity

